/* 버튼 css */
@font-face {
  src: url("https://assets.codepen.io/4175254/DIN2014-DemiBold.ttf")
    format("truetype");
  font-family: "DIN 2014";
  font-weight: 600;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  min-height: 100dvh;
  background-color: #1c1c1c;
  padding: none;
}

.button {
  --bevel: 3px;
  --border-width: 3px;
  font-family: "DIN 2014";
  font-weight: 600;
  color: #1d2119;
  filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.95));
  min-width: 10em;
  border: 0;
  background-color: transparent;
}

.button-outline {
  --bevel-1: calc(
    (var(--bevel) + (var(--border-width)) * 2) -
      ((var(--border-width) * 0.41421)) * 2
  );
  --bevel-2: calc(var(--bevel-1) + var(--border-width));
  --bevel-3: calc(var(--bevel-2) + var(--border-width));
  display: block;
  margin-top: calc(var(--border-width) * -1);
  margin-left: calc(var(--border-width) * -1);
  padding: var(--border-width);
  background-color: #fff;
  clip-path: polygon(
    var(--bevel-2) var(--border-width),
    calc(100% - var(--bevel-2)) var(--border-width),
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    var(--border-width) calc(100% - var(--bevel-2)),
    var(--border-width) var(--bevel-2)
  );
  transition-property: clip-path;
  transition-duration: 0.2s;
}
.button:hover:not(:active) .button-outline,
.button:focus-visible:not(:active) .button-outline {
  clip-path: polygon(
    var(--bevel-1) 0,
    calc(100% - var(--bevel-3)) 0,
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    0 calc(100% - var(--bevel-3)),
    0 var(--bevel-1)
  );
}

.button-shadow {
  --padding: calc(var(--border-width) * 2);
  --bevel-1: calc(
    (var(--bevel) + var(--border-width)) - (var(--border-width) * 0.41421)
  );
  --bevel-2: calc(var(--bevel-1) + var(--border-width));
  --bevel-3: calc(var(--bevel-2) + var(--border-width));
  display: block;
  padding: calc(var(--border-width) * 2) var(--padding) var(--padding)
    calc(var(--border-width) * 2);
  background-color: #1d2119;
  clip-path: polygon(
    var(--bevel-2) var(--border-width),
    calc(100% - var(--bevel-2)) var(--border-width),
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    var(--border-width) calc(100% - var(--bevel-2)),
    var(--border-width) var(--bevel-2)
  );
  transition-property: clip-path;
  transition-duration: 0.2s;
}
.button:hover:not(:active) .button-shadow,
.button:focus-visible:not(:active) .button-shadow {
  clip-path: polygon(
    var(--bevel-1) 0,
    calc(100% - var(--bevel-3)) 0,
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    0 calc(100% - var(--bevel-3)),
    0 var(--bevel-1)
  );
}

.button-inside {
  --padding-vertical: 6px;
  display: block;
  padding: var(--padding-vertical) 24px calc(var(--padding-vertical) - 0.125em);
  background-color: #fff;
  clip-path: polygon(
    var(--bevel) 0,
    calc(100% - var(--bevel)) 0,
    100% var(--bevel),
    100% calc(100% - var(--bevel)),
    calc(100% - var(--bevel)) 100%,
    var(--bevel) 100%,
    0 calc(100% - var(--bevel)),
    0 var(--bevel)
  );
  text-align: center;
  transition-property: transform;
  transition-duration: 0.2s;
}
.button:hover:not(:active) .button-inside,
.button:focus-visible:not(:active) .button-inside {
  transform: translate(
    calc(var(--border-width) * -1),
    calc(var(--border-width) * -1)
  );
}
.button:hover .button-inside,
.button:focus-visible .button-inside {
  background-color: #fcd200;
  background-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 0),
      rgba(252, 210, 0, 0.9)
    ),
    radial-gradient(#fff60d 1px, rgba(0, 0, 0, 0) 0%),
    radial-gradient(#fff60d 1px, rgba(0, 0, 0, 0) 0%);
  background-size: auto, 6px 6px, 6px 6px;
  background-position: 0 0, 0 0, 3px 3px;
  animation: scroll-background 1s linear infinite;
}

@keyframes scroll-background {
  to {
    background-position-x: 0, -6px, -3px;
  }
}
.button-text-characters-container {
  display: inline-block;
  transform: skewX(-6deg);
}

.button-text-character {
  display: inline-block;
}
.button:hover:not(:active) .button-text-character,
.button:focus-visible:not(:active) .button-text-character {
  animation: jump 4s cubic-bezier(0.75, 0.25, 1, 2) var(--delay) infinite;
}

@keyframes jump {
  5% {
    transform: translateY(-0.125em);
  }
  10% {
    transform: translateY(0);
  }
}

/* 전체 레이아웃 */
.main_container {
  display: flex;
  justify-content: center;
  max-width: 70%;
  flex-wrap: wrap;
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  color: white;
}
.container .text {
  display: flex;
  justify-content: center;
}
.textBox {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox2 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}
.textBox3 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox4 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox5 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox6 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox7 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}

.textBox8 {
  border: 1px solid white;
  border-radius: 10px;
  padding: 30px;
}
